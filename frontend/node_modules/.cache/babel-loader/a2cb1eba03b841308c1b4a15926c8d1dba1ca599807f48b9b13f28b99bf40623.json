{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Projects\\\\cricbook\\\\frontend\\\\cricslot\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createGround, fetchGrounds } from '../redux/actions/groundActions';\nimport { Box, TextField, Button, Typography, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport { useNavigate } from 'react-router-dom';\nimport Header from './Header/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateGround = () => {\n  _s();\n  const [groundEntries, setGroundEntries] = useState([{\n    groundName: '',\n    location: '',\n    pricePerHour: '',\n    availability: '',\n    description: '',\n    slots: [{\n      slotName: '',\n      startTime: '',\n      endTime: ''\n    }] // Initial slot array\n  }]);\n  const [isEditing, setIsEditing] = useState(false); // New state to track edit mode\n  const [groundToEdit, setGroundToEdit] = useState(null); // Store the ID of the ground being edited\n\n  const [showCreateForm, setShowCreateForm] = useState(false); // State to toggle form visibility\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Fetching existing grounds\n  const groundState = useSelector(state => state.grounds);\n  console.log(groundState, \"groundState:\");\n  const {\n    grounds,\n    loading,\n    error\n  } = groundState;\n  let check = groundState.grounds.grounds;\n  console.log(check, \"checks:\");\n  useEffect(() => {\n    debugger;\n    dispatch(fetchGrounds()).catch(error => {\n      debugger;\n      if (error.response.data.msg === \"Token is not valid\") {\n        navigate('/login'); // Redirect to login if 401 Unauthorized\n      }\n    });\n  }, [dispatch, navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this); // Show a loading message or spinner\n  }\n\n  // Handle ground input changes\n  const onChange = (index, e) => {\n    const newEntries = [...groundEntries];\n    newEntries[index][e.target.name] = e.target.value;\n    setGroundEntries(newEntries);\n  };\n  // Utility function to convert 12-hour time format to 24-hour time format\n  // Utility function to convert 12-hour time format to 24-hour time format\n  const convertTo24HourFormat = time => {\n    const [timePart, modifier] = time.split(\" \");\n    let [hours, minutes] = timePart.split(\":\").map(Number);\n    if (modifier === \"PM\" && hours < 12) {\n      hours += 12; // Convert PM hours\n    }\n    if (modifier === \"AM\" && hours === 12) {\n      hours = 0; // Convert 12 AM to 0 hours\n    }\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n  };\n\n  // Handle slot input changes\n  // Handle slot input changes\n  const handleSlotChange = (groundIndex, slotIndex, e) => {\n    const newEntries = [...groundEntries];\n    if (e.target.name === 'startTime' || e.target.name === 'endTime') {\n      const timeIn24HourFormat = convertTo24HourFormat(e.target.value);\n      newEntries[groundIndex].slots[slotIndex][e.target.name] = timeIn24HourFormat;\n    } else {\n      newEntries[groundIndex].slots[slotIndex][e.target.name] = e.target.value;\n    }\n    setGroundEntries(newEntries);\n  };\n\n  // Add a new ground entry\n  const addGroundEntry = () => {\n    setGroundEntries(prev => [...prev, {\n      groundName: '',\n      location: '',\n      pricePerHour: '',\n      availability: '',\n      description: '',\n      slots: [{\n        slotName: '',\n        startTime: '',\n        endTime: ''\n      }] // New ground with initial slot\n    }]);\n  };\n\n  // Remove a ground entry\n  const removeGroundEntry = index => {\n    if (groundEntries.length > 1) {\n      const newEntries = [...groundEntries];\n      newEntries.splice(index, 1);\n      setGroundEntries(newEntries);\n    }\n  };\n\n  // Add a new slot to a specific ground\n  const addSlot = groundIndex => {\n    const newEntries = [...groundEntries];\n    newEntries[groundIndex].slots.push({\n      slotName: '',\n      startTime: '',\n      endTime: ''\n    });\n    setGroundEntries(newEntries);\n  };\n\n  // Remove a specific slot from a ground\n  const removeSlot = (groundIndex, slotIndex) => {\n    if (groundEntries[groundIndex].slots.length > 1) {\n      const newEntries = [...groundEntries];\n      newEntries[groundIndex].slots.splice(slotIndex, 1);\n      setGroundEntries(newEntries);\n    }\n  };\n\n  // Edit existing ground\n  const editGround = ground => {\n    setGroundEntries([ground]); // Populate form with the ground to edit\n    setIsEditing(true);\n    setGroundToEdit(ground._id);\n    setShowCreateForm(true);\n  };\n\n  // Submit form to create grounds with slots\n  const onSubmit = async e => {\n    e.preventDefault();\n    for (const entry of groundEntries) {\n      await dispatch(createGround(entry));\n    }\n    alert(\"Grounds with slots created successfully!\");\n    setIsEditing(false);\n    setGroundToEdit(null);\n    dispatch(fetchGrounds());\n    setShowCreateForm(false); // Hide form after submission and show existing grounds\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '600px',\n        margin: 'auto',\n        marginTop: '50px',\n        padding: '20px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px',\n        boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        style: {\n          color: '#3f51b5'\n        },\n        children: showCreateForm ? isEditing ? \"Edit Ground\" : \"Create a New Ground\" : \"View Existing Grounds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), !showCreateForm && /*#__PURE__*/_jsxDEV(Box, {\n        children: [Array.isArray(check) && check.length > 0 ? check.map((entry, groundIndex) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: `Ground ${groundIndex + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ground Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 31\n            }, this), \" \", entry.groundName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 31\n            }, this), \" \", entry.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 31\n            }, this), \" \", entry.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Slots:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 19\n          }, this), Array.isArray(entry.slots) && entry.slots.map((slot, slotIndex) => /*#__PURE__*/_jsxDEV(Typography, {\n            children: `${slot.slotName} (${slot.startTime} - ${slot.endTime} - RS ${slot.price} )`\n          }, slotIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => editGround(entry),\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 19\n          }, this)]\n        }, groundIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No grounds available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setShowCreateForm(true) // Show form and hide existing grounds\n          ,\n          sx: {\n            marginTop: '20px'\n          },\n          children: \"Create Ground\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [groundEntries.map((entry, groundIndex) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [\"Ground \", groundIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Ground Name\",\n            variant: \"outlined\",\n            name: \"groundName\",\n            value: entry.groundName,\n            onChange: e => onChange(groundIndex, e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Location\",\n            variant: \"outlined\",\n            name: \"location\",\n            value: entry.location,\n            onChange: e => onChange(groundIndex, e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Description\",\n            variant: \"outlined\",\n            name: \"description\",\n            value: entry.description,\n            onChange: e => onChange(groundIndex, e),\n            multiline: true,\n            rows: 4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Slots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), entry.slots.map((slot, slotIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              margin: \"normal\",\n              label: \"Slot Name\",\n              variant: \"outlined\",\n              name: \"slotName\",\n              value: slot.slotName,\n              onChange: e => handleSlotChange(groundIndex, slotIndex, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              margin: \"normal\",\n              label: \"Price\",\n              variant: \"outlined\",\n              name: \"price\",\n              value: slot.price,\n              onChange: e => handleSlotChange(groundIndex, slotIndex, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              margin: \"normal\",\n              label: \"Start Time\",\n              variant: \"outlined\",\n              name: \"startTime\",\n              type: \"time\",\n              value: slot.startTime // Ensure this is in \"HH:mm\" format\n              ,\n              onChange: e => handleSlotChange(groundIndex, slotIndex, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              margin: \"normal\",\n              label: \"End Time\",\n              variant: \"outlined\",\n              name: \"endTime\",\n              type: \"time\",\n              value: slot.endTime // Ensure this is in \"HH:mm\" format\n              ,\n              onChange: e => handleSlotChange(groundIndex, slotIndex, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 21\n            }, this), entry.slots.length > 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => removeSlot(groundIndex, slotIndex),\n              color: \"secondary\",\n              size: \"small\",\n              sx: {\n                marginTop: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 23\n            }, this)]\n          }, slotIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => addSlot(groundIndex),\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 30\n            }, this),\n            sx: {\n              marginBottom: '10px'\n            },\n            children: \"Add Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), groundEntries.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => removeGroundEntry(groundIndex),\n            variant: \"outlined\",\n            color: \"secondary\",\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 32\n            }, this),\n            sx: {\n              marginTop: '10px'\n            },\n            children: \"Remove Ground\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 19\n          }, this)]\n        }, groundIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addGroundEntry,\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 26\n          }, this),\n          sx: {\n            marginBottom: '20px'\n          },\n          children: \"Add Another Ground\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          children: [isEditing ? \"Update\" : \"Submit\", \"  // Change button text based on editing state\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CreateGround, \"+aPfuwI4NUCaP5ybEJY6X7jl94Q=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = CreateGround;\nexport default CreateGround;\nvar _c;\n$RefreshReg$(_c, \"CreateGround\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","createGround","fetchGrounds","Box","TextField","Button","Typography","IconButton","DeleteIcon","EditIcon","AddIcon","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGround","_s","groundEntries","setGroundEntries","groundName","location","pricePerHour","availability","description","slots","slotName","startTime","endTime","isEditing","setIsEditing","groundToEdit","setGroundToEdit","showCreateForm","setShowCreateForm","dispatch","navigate","groundState","state","grounds","console","log","loading","error","check","catch","response","data","msg","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","e","newEntries","target","name","value","convertTo24HourFormat","time","timePart","modifier","split","hours","minutes","map","Number","String","padStart","handleSlotChange","groundIndex","slotIndex","timeIn24HourFormat","addGroundEntry","prev","removeGroundEntry","length","splice","addSlot","push","removeSlot","editGround","ground","_id","onSubmit","preventDefault","entry","alert","sx","width","margin","marginTop","padding","backgroundColor","borderRadius","boxShadow","variant","align","gutterBottom","style","color","Array","isArray","marginBottom","slot","price","onClick","fullWidth","label","required","multiline","rows","display","alignItems","type","size","startIcon","_c","$RefreshReg$"],"sources":["F:/React Projects/cricbook/frontend/cricslot/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createGround, fetchGrounds } from '../redux/actions/groundActions';\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from './Header/Header';\r\n\r\nconst CreateGround = () => {\r\n  const [groundEntries, setGroundEntries] = useState([\r\n    {\r\n      groundName: '',\r\n      location: '',\r\n      pricePerHour: '',\r\n      availability: '',\r\n      description: '',\r\n      slots: [{ slotName: '', startTime: '', endTime: '' }] // Initial slot array\r\n    },\r\n  ]);\r\n\r\n  const [isEditing, setIsEditing] = useState(false); // New state to track edit mode\r\n  const [groundToEdit, setGroundToEdit] = useState(null); // Store the ID of the ground being edited\r\n\r\n  const [showCreateForm, setShowCreateForm] = useState(false); // State to toggle form visibility\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // Fetching existing grounds\r\n  const groundState = useSelector((state) => state.grounds);\r\n  console.log(groundState, \"groundState:\")\r\n  const { grounds, loading, error } = groundState;\r\n  let check = groundState.grounds.grounds;\r\n  console.log(check, \"checks:\")\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n    dispatch(fetchGrounds())\r\n      .catch((error) => {\r\n        debugger;\r\n        if (error.response.data.msg === \"Token is not valid\") {\r\n          navigate('/login'); // Redirect to login if 401 Unauthorized\r\n        }\r\n      });\r\n  }, [dispatch, navigate]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Show a loading message or spinner\r\n  }\r\n\r\n  // Handle ground input changes\r\n  const onChange = (index, e) => {\r\n    const newEntries = [...groundEntries];\r\n    newEntries[index][e.target.name] = e.target.value;\r\n    setGroundEntries(newEntries);\r\n  };\r\n  // Utility function to convert 12-hour time format to 24-hour time format\r\n  // Utility function to convert 12-hour time format to 24-hour time format\r\n  const convertTo24HourFormat = (time) => {\r\n    const [timePart, modifier] = time.split(\" \");\r\n    let [hours, minutes] = timePart.split(\":\").map(Number);\r\n\r\n    if (modifier === \"PM\" && hours < 12) {\r\n      hours += 12; // Convert PM hours\r\n    }\r\n    if (modifier === \"AM\" && hours === 12) {\r\n      hours = 0; // Convert 12 AM to 0 hours\r\n    }\r\n\r\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n  };\r\n\r\n  // Handle slot input changes\r\n  // Handle slot input changes\r\n  const handleSlotChange = (groundIndex, slotIndex, e) => {\r\n    const newEntries = [...groundEntries];\r\n\r\n    if (e.target.name === 'startTime' || e.target.name === 'endTime') {\r\n      const timeIn24HourFormat = convertTo24HourFormat(e.target.value);\r\n      newEntries[groundIndex].slots[slotIndex][e.target.name] = timeIn24HourFormat;\r\n    } else {\r\n      newEntries[groundIndex].slots[slotIndex][e.target.name] = e.target.value;\r\n    }\r\n\r\n    setGroundEntries(newEntries);\r\n  };\r\n\r\n  // Add a new ground entry\r\n  const addGroundEntry = () => {\r\n    setGroundEntries((prev) => [\r\n      ...prev,\r\n      {\r\n        groundName: '',\r\n        location: '',\r\n        pricePerHour: '',\r\n        availability: '',\r\n        description: '',\r\n        slots: [{ slotName: '', startTime: '', endTime: '' }] // New ground with initial slot\r\n      }\r\n    ]);\r\n  };\r\n\r\n  // Remove a ground entry\r\n  const removeGroundEntry = (index) => {\r\n    if (groundEntries.length > 1) {\r\n      const newEntries = [...groundEntries];\r\n      newEntries.splice(index, 1);\r\n      setGroundEntries(newEntries);\r\n    }\r\n  };\r\n\r\n  // Add a new slot to a specific ground\r\n  const addSlot = (groundIndex) => {\r\n    const newEntries = [...groundEntries];\r\n    newEntries[groundIndex].slots.push({ slotName: '', startTime: '', endTime: '' });\r\n    setGroundEntries(newEntries);\r\n  };\r\n\r\n  // Remove a specific slot from a ground\r\n  const removeSlot = (groundIndex, slotIndex) => {\r\n    if (groundEntries[groundIndex].slots.length > 1) {\r\n      const newEntries = [...groundEntries];\r\n      newEntries[groundIndex].slots.splice(slotIndex, 1);\r\n      setGroundEntries(newEntries);\r\n    }\r\n  };\r\n\r\n\r\n  // Edit existing ground\r\n  const editGround = (ground) => {\r\n    setGroundEntries([ground]); // Populate form with the ground to edit\r\n    setIsEditing(true);\r\n    setGroundToEdit(ground._id);\r\n    setShowCreateForm(true);\r\n  };\r\n\r\n  // Submit form to create grounds with slots\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    for (const entry of groundEntries) {\r\n      await dispatch(createGround(entry));\r\n    }\r\n    alert(\"Grounds with slots created successfully!\");\r\n    setIsEditing(false);\r\n    setGroundToEdit(null);\r\n    dispatch(fetchGrounds());\r\n    setShowCreateForm(false); // Hide form after submission and show existing grounds\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header /> {/* Use Header component here */}\r\n      <Box\r\n        sx={{\r\n          width: '600px',\r\n          margin: 'auto',\r\n          marginTop: '50px',\r\n          padding: '20px',\r\n          backgroundColor: '#f5f5f5',\r\n          borderRadius: '8px',\r\n          boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom style={{ color: '#3f51b5' }}>\r\n        {showCreateForm ? (isEditing ? \"Edit Ground\" : \"Create a New Ground\") : \"View Existing Grounds\"}\r\n        </Typography>\r\n\r\n        {/* Show existing grounds if the form is not visible */}\r\n        {!showCreateForm && (\r\n          <Box>\r\n            {Array.isArray(check) && check.length > 0 ? (\r\n              check.map((entry, groundIndex) => (\r\n                <Box key={groundIndex} sx={{ marginBottom: '20px' }}>\r\n                  <Typography variant=\"h6\" gutterBottom>{`Ground ${groundIndex + 1}`}</Typography>\r\n                  <Typography><strong>Ground Name:</strong> {entry.groundName}</Typography>\r\n                  <Typography><strong>Location:</strong> {entry.location}</Typography>\r\n                  <Typography><strong>Description:</strong> {entry.description}</Typography>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>Slots:</Typography>\r\n                  {Array.isArray(entry.slots) && entry.slots.map((slot, slotIndex) => (\r\n                    <Typography key={slotIndex}>\r\n                      {`${slot.slotName} (${slot.startTime} - ${slot.endTime} - RS ${slot.price} )`}\r\n\r\n\r\n                    </Typography>\r\n\r\n\r\n\r\n                  ))}\r\n                  <IconButton onClick={() => editGround(entry)} color=\"primary\">\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <Typography>No grounds available.</Typography>\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setShowCreateForm(true)} // Show form and hide existing grounds\r\n              sx={{ marginTop: '20px' }}\r\n            >\r\n              Create Ground\r\n            </Button>\r\n          </Box>\r\n        )}\r\n\r\n        {/* Show the form if showCreateForm is true */}\r\n        {showCreateForm && (\r\n          <form onSubmit={onSubmit}>\r\n            {groundEntries.map((entry, groundIndex) => (\r\n              <Box key={groundIndex} sx={{ marginBottom: '20px' }}>\r\n                <Typography variant=\"h6\" gutterBottom>Ground {groundIndex + 1}</Typography>\r\n\r\n                {/* Ground Details */}\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  label=\"Ground Name\"\r\n                  variant=\"outlined\"\r\n                  name=\"groundName\"\r\n                  value={entry.groundName}\r\n                  onChange={(e) => onChange(groundIndex, e)}\r\n                  required\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  label=\"Location\"\r\n                  variant=\"outlined\"\r\n                  name=\"location\"\r\n                  value={entry.location}\r\n                  onChange={(e) => onChange(groundIndex, e)}\r\n                  required\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  label=\"Description\"\r\n                  variant=\"outlined\"\r\n                  name=\"description\"\r\n                  value={entry.description}\r\n                  onChange={(e) => onChange(groundIndex, e)}\r\n                  multiline\r\n                  rows={4}\r\n                  required\r\n                />\r\n\r\n                {/* Slot Details for the Ground */}\r\n                <Typography variant=\"subtitle1\" gutterBottom>Slots</Typography>\r\n                {entry.slots.map((slot, slotIndex) => (\r\n                  <Box key={slotIndex} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <TextField\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"Slot Name\"\r\n                      variant=\"outlined\"\r\n                      name=\"slotName\"\r\n                      value={slot.slotName}\r\n                      onChange={(e) => handleSlotChange(groundIndex, slotIndex, e)}\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"Price\"\r\n                      variant=\"outlined\"\r\n                      name=\"price\"\r\n                      value={slot.price}\r\n                      onChange={(e) => handleSlotChange(groundIndex, slotIndex, e)}\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"Start Time\"\r\n                      variant=\"outlined\"\r\n                      name=\"startTime\"\r\n                      type=\"time\"\r\n                      value={slot.startTime} // Ensure this is in \"HH:mm\" format\r\n                      onChange={(e) => handleSlotChange(groundIndex, slotIndex, e)}\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      label=\"End Time\"\r\n                      variant=\"outlined\"\r\n                      name=\"endTime\"\r\n                      type=\"time\"\r\n                      value={slot.endTime} // Ensure this is in \"HH:mm\" format\r\n                      onChange={(e) => handleSlotChange(groundIndex, slotIndex, e)}\r\n                      required\r\n                    />\r\n\r\n                    {/* Remove Slot Button */}\r\n                    {entry.slots.length > 1 && (\r\n                      <IconButton\r\n                        onClick={() => removeSlot(groundIndex, slotIndex)}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        sx={{ marginTop: '10px' }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    )}\r\n                  </Box>\r\n                ))}\r\n                <Button\r\n                  onClick={() => addSlot(groundIndex)}\r\n                  variant=\"outlined\"\r\n                  startIcon={<AddIcon />}\r\n                  sx={{ marginBottom: '10px' }}\r\n                >\r\n                  Add Slot\r\n                </Button>\r\n\r\n                {/* Remove Ground Button */}\r\n                {groundEntries.length > 1 && (\r\n                  <Button\r\n                    onClick={() => removeGroundEntry(groundIndex)}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                    sx={{ marginTop: '10px' }}\r\n                  >\r\n                    Remove Ground\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n            ))}\r\n            <Button\r\n              onClick={addGroundEntry}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n              sx={{ marginBottom: '20px' }}\r\n            >\r\n              Add Another Ground\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              {isEditing ? \"Update\" : \"Submit\"}  // Change button text based on editing state\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateGround;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}