{"ast":null,"code":"const initialState = {\n  grounds: {\n    grounds: [],\n    // array of ground objects\n    loading: false,\n    error: null\n  }\n};\nconst groundReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_GROUND_REQUEST':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'CREATE_GROUND_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        grounds: [...state.grounds, action.payload]\n      };\n    // Append the new ground\n    case 'CREATE_GROUND_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    // Fetch Grounds\n    case 'FETCH_GROUNDS_REQUEST':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'FETCH_GROUNDS_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        grounds: [...state.grounds, action.payload]\n      };\n    // Set fetched grounds\n    case 'FETCH_GROUNDS_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default groundReducer;","map":{"version":3,"names":["initialState","grounds","loading","error","groundReducer","state","action","type","payload"],"sources":["F:/React Projects/cricbook/frontend/cricslot/src/redux/reducers/groundReducers.js"],"sourcesContent":["const initialState = {\r\n  grounds: {\r\n    grounds: [], // array of ground objects\r\n    loading: false,\r\n    error: null,\r\n  },\r\n};\r\n\r\nconst groundReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_GROUND_REQUEST':\r\n      return { ...state, loading: true, error: null };\r\n    case 'CREATE_GROUND_SUCCESS':\r\n      return { ...state, loading: false, grounds: [...state.grounds, action.payload] }; // Append the new ground\r\n    case 'CREATE_GROUND_FAILURE':\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    // Fetch Grounds\r\n    case 'FETCH_GROUNDS_REQUEST':\r\n      return { ...state, loading: true, error: null };\r\n    case 'FETCH_GROUNDS_SUCCESS':\r\n      return { ...state, loading: false, grounds: [...state.grounds, action.payload] }; // Set fetched grounds\r\n    case 'FETCH_GROUNDS_FAILURE':\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groundReducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE;IACPA,OAAO,EAAE,EAAE;IAAE;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT;AACF,CAAC;AAED,MAAMC,aAAa,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EACtD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,uBAAuB;MAC1B,OAAO;QAAE,GAAGF,KAAK;QAAEH,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACjD,KAAK,uBAAuB;MAC1B,OAAO;QAAE,GAAGE,KAAK;QAAEH,OAAO,EAAE,KAAK;QAAED,OAAO,EAAE,CAAC,GAAGI,KAAK,CAACJ,OAAO,EAAEK,MAAM,CAACE,OAAO;MAAE,CAAC;IAAE;IACpF,KAAK,uBAAuB;MAC1B,OAAO;QAAE,GAAGH,KAAK;QAAEH,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEG,MAAM,CAACE;MAAQ,CAAC;;IAE5D;IACA,KAAK,uBAAuB;MAC1B,OAAO;QAAE,GAAGH,KAAK;QAAEH,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACjD,KAAK,uBAAuB;MAC1B,OAAO;QAAE,GAAGE,KAAK;QAAEH,OAAO,EAAE,KAAK;QAAED,OAAO,EAAE,CAAC,GAAGI,KAAK,CAACJ,OAAO,EAAEK,MAAM,CAACE,OAAO;MAAE,CAAC;IAAE;IACpF,KAAK,uBAAuB;MAC1B,OAAO;QAAE,GAAGH,KAAK;QAAEH,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEG,MAAM,CAACE;MAAQ,CAAC;IAC5D;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}