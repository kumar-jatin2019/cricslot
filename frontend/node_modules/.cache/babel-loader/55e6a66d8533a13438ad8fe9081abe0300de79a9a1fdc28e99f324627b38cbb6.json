{"ast":null,"code":"import axios from'axios';import{REGISTER_REQUEST,LOGIN_REQUEST,REGISTER_SUCCESS,LOGIN_SUCCESS,REGISTER_FAILURE,LOGIN_FAILURE}from'../type';export const registerUser=formData=>async dispatch=>{dispatch({type:REGISTER_REQUEST});try{const res=await axios.post('https://cricslot-z9iu.vercel.app/api/auth/register',formData);dispatch({type:REGISTER_SUCCESS,payload:res.data});alert(res.data.msg);return res;}catch(err){dispatch({type:REGISTER_FAILURE,payload:err.response.data.msg});console.log(err,\"error\");alert(err.response.data.msg,\"err.response.data.msg\");// alert(err.response.data.errors[0].msg);\n}};export const loginUser=formData=>async dispatch=>{dispatch({type:LOGIN_REQUEST});try{const res=await axios.post('https://cricslot-z9iu.vercel.app/api/auth/login',formData);// Extract token and user data from the response\nconst{token,user}=res.data;// Save the token in local storage\nlocalStorage.setItem('token',token);dispatch({type:LOGIN_SUCCESS,payload:{token,user}});// Optional: Set token in axios headers if needed for subsequent requests\naxios.defaults.headers.common['Authorization']=`Bearer ${token}`;alert(res.data.msg);// Alert success message\nreturn res;}catch(err){dispatch({type:LOGIN_FAILURE,payload:err.response.data.msg});alert(err.response.data.msg);// Alert error message\n}};","map":{"version":3,"names":["axios","REGISTER_REQUEST","LOGIN_REQUEST","REGISTER_SUCCESS","LOGIN_SUCCESS","REGISTER_FAILURE","LOGIN_FAILURE","registerUser","formData","dispatch","type","res","post","payload","data","alert","msg","err","response","console","log","loginUser","token","user","localStorage","setItem","defaults","headers","common"],"sources":["F:/CRIC/frontend/src/redux/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { REGISTER_REQUEST, LOGIN_REQUEST, REGISTER_SUCCESS,  LOGIN_SUCCESS,  REGISTER_FAILURE, LOGIN_FAILURE } from '../type';\r\n\r\nexport const registerUser = (formData) => async (dispatch) => {\r\n  dispatch({ type: REGISTER_REQUEST });\r\n  try {\r\n    const res = await axios.post('https://cricslot-z9iu.vercel.app/api/auth/register', formData);\r\n    dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n    alert(res.data.msg);\r\n    return res;\r\n  } catch (err) {\r\n    dispatch({ type: REGISTER_FAILURE, payload: err.response.data.msg });\r\n     console.log(err, \"error\");\r\n     alert(err.response.data.msg, \"err.response.data.msg\");\r\n   // alert(err.response.data.errors[0].msg);\r\n  }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n  dispatch({ type: LOGIN_REQUEST });\r\n  try {\r\n    const res = await axios.post('https://cricslot-z9iu.vercel.app/api/auth/login', formData);\r\n    // Extract token and user data from the response\r\n    const { token, user } = res.data;\r\n    // Save the token in local storage\r\n    localStorage.setItem('token', token);\r\n    dispatch({ type: LOGIN_SUCCESS, payload: { token, user } });\r\n       // Optional: Set token in axios headers if needed for subsequent requests\r\n     axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    alert(res.data.msg); // Alert success message\r\n    return res;\r\n  } catch (err) {\r\n    dispatch({ type: LOGIN_FAILURE, payload: err.response.data.msg });\r\n    alert(err.response.data.msg); // Alert error message\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,gBAAgB,CAAEC,aAAa,CAAEC,gBAAgB,CAAGC,aAAa,CAAGC,gBAAgB,CAAEC,aAAa,KAAQ,SAAS,CAE7H,MAAO,MAAM,CAAAC,YAAY,CAAIC,QAAQ,EAAK,KAAO,CAAAC,QAAQ,EAAK,CAC5DA,QAAQ,CAAC,CAAEC,IAAI,CAAET,gBAAiB,CAAC,CAAC,CACpC,GAAI,CACF,KAAM,CAAAU,GAAG,CAAG,KAAM,CAAAX,KAAK,CAACY,IAAI,CAAC,oDAAoD,CAAEJ,QAAQ,CAAC,CAC5FC,QAAQ,CAAC,CAAEC,IAAI,CAAEP,gBAAgB,CAAEU,OAAO,CAAEF,GAAG,CAACG,IAAK,CAAC,CAAC,CACvDC,KAAK,CAACJ,GAAG,CAACG,IAAI,CAACE,GAAG,CAAC,CACnB,MAAO,CAAAL,GAAG,CACZ,CAAE,MAAOM,GAAG,CAAE,CACZR,QAAQ,CAAC,CAAEC,IAAI,CAAEL,gBAAgB,CAAEQ,OAAO,CAAEI,GAAG,CAACC,QAAQ,CAACJ,IAAI,CAACE,GAAI,CAAC,CAAC,CACnEG,OAAO,CAACC,GAAG,CAACH,GAAG,CAAE,OAAO,CAAC,CACzBF,KAAK,CAACE,GAAG,CAACC,QAAQ,CAACJ,IAAI,CAACE,GAAG,CAAE,uBAAuB,CAAC,CACvD;AACD,CACF,CAAC,CAED,MAAO,MAAM,CAAAK,SAAS,CAAIb,QAAQ,EAAK,KAAO,CAAAC,QAAQ,EAAK,CACzDA,QAAQ,CAAC,CAAEC,IAAI,CAAER,aAAc,CAAC,CAAC,CACjC,GAAI,CACF,KAAM,CAAAS,GAAG,CAAG,KAAM,CAAAX,KAAK,CAACY,IAAI,CAAC,iDAAiD,CAAEJ,QAAQ,CAAC,CACzF;AACA,KAAM,CAAEc,KAAK,CAAEC,IAAK,CAAC,CAAGZ,GAAG,CAACG,IAAI,CAChC;AACAU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,KAAK,CAAC,CACpCb,QAAQ,CAAC,CAAEC,IAAI,CAAEN,aAAa,CAAES,OAAO,CAAE,CAAES,KAAK,CAAEC,IAAK,CAAE,CAAC,CAAC,CACxD;AACFvB,KAAK,CAAC0B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CAAG,UAAUN,KAAK,EAAE,CACnEP,KAAK,CAACJ,GAAG,CAACG,IAAI,CAACE,GAAG,CAAC,CAAE;AACrB,MAAO,CAAAL,GAAG,CACZ,CAAE,MAAOM,GAAG,CAAE,CACZR,QAAQ,CAAC,CAAEC,IAAI,CAAEJ,aAAa,CAAEO,OAAO,CAAEI,GAAG,CAACC,QAAQ,CAACJ,IAAI,CAACE,GAAI,CAAC,CAAC,CACjED,KAAK,CAACE,GAAG,CAACC,QAAQ,CAACJ,IAAI,CAACE,GAAG,CAAC,CAAE;AAChC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}