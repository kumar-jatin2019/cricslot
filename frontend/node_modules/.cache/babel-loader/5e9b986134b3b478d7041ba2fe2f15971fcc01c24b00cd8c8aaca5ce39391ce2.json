{"ast":null,"code":"import axios from'axios';const axiosInstance=axios.create({baseURL:'https://cricslot-z9iu.vercel.app/api'// Set your API base URL\n});// Intercept requests to add the Bearer token\naxiosInstance.interceptors.request.use(config=>{const token=localStorage.getItem('token');// Retrieve the token from localStorage\nif(token){config.headers['Authorization']=`Bearer ${token}`;// Set the token in the headers\n}return config;},error=>{return Promise.reject(error);});export default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["F:/CRIC/frontend/src/authToken.js"],"sourcesContent":["import axios from 'axios';\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://cricslot-z9iu.vercel.app/api', // Set your API base URL\r\n});\r\n\r\n// Intercept requests to add the Bearer token\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token'); // Retrieve the token from localStorage\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`; // Set the token in the headers\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,KAAM,CAAAC,aAAa,CAAGD,KAAK,CAACE,MAAM,CAAC,CACjCC,OAAO,CAAE,sCAAwC;AACnD,CAAC,CAAC,CAEF;AACAF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CACjD,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;AAC7C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,CAAG,UAAUH,KAAK,EAAE,CAAE;AACvD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAGK,KAAK,EAAK,CACZ,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CAAC,CAAC,CAEF,cAAe,CAAAX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}