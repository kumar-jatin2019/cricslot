{"ast":null,"code":"import{FETCH_GROUNDS_REQUEST_USER,FETCH_GROUNDS_SUCCESS_USER,FETCH_GROUNDS_FAILURE_USER,UPDATE_GROUND_REQUEST,UPDATE_GROUND_SUCCESS,UPDATE_GROUND_FAILURE}from'../actions/groundActions';const initialState={grounds:{grounds:[],// array of ground objects\nuserGrounds:[],loading:false,error:null}};const groundReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'FETCH_GROUNDS_REQUEST':return{...state,loading:true,error:null};case'FETCH_GROUNDS_SUCCESS':return{...state,loading:false,grounds:action.payload};case'FETCH_GROUNDS_FAILURE':return{...state,loading:false,error:action.payload};case FETCH_GROUNDS_REQUEST_USER:return{...state,loading:true,error:null};case FETCH_GROUNDS_SUCCESS_USER:return{...state,loading:false,grounds:action.payload};case FETCH_GROUNDS_FAILURE_USER:return{...state,loading:false,error:action.payload};// Update Ground Cases\ncase UPDATE_GROUND_REQUEST:return{...state,loading:true,error:null};case UPDATE_GROUND_SUCCESS:debugger;return{...state,loading:false,grounds:state.grounds.grounds.map(ground=>ground.id===action.payload.id?action.payload:ground)// Update the specific ground in the array\n};case UPDATE_GROUND_FAILURE:return{...state,loading:false,error:action.payload};default:return state;}};export default groundReducer;","map":{"version":3,"names":["FETCH_GROUNDS_REQUEST_USER","FETCH_GROUNDS_SUCCESS_USER","FETCH_GROUNDS_FAILURE_USER","UPDATE_GROUND_REQUEST","UPDATE_GROUND_SUCCESS","UPDATE_GROUND_FAILURE","initialState","grounds","userGrounds","loading","error","groundReducer","state","arguments","length","undefined","action","type","payload","map","ground","id"],"sources":["F:/CRIC/frontend/src/redux/reducers/groundReducers.js"],"sourcesContent":["import {\r\n  FETCH_GROUNDS_REQUEST_USER,\r\n  FETCH_GROUNDS_SUCCESS_USER,\r\n  FETCH_GROUNDS_FAILURE_USER,\r\n  UPDATE_GROUND_REQUEST,\r\n  UPDATE_GROUND_SUCCESS,\r\n  UPDATE_GROUND_FAILURE\r\n} from '../actions/groundActions';\r\n\r\nconst initialState = {\r\n  grounds: {\r\n    grounds: [], // array of ground objects\r\n    userGrounds: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n};\r\n\r\nconst groundReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_GROUNDS_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case 'FETCH_GROUNDS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        grounds: action.payload,\r\n      };\r\n    case 'FETCH_GROUNDS_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n      case FETCH_GROUNDS_REQUEST_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_GROUNDS_SUCCESS_USER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        grounds: action.payload,\r\n      };\r\n    case FETCH_GROUNDS_FAILURE_USER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n      // Update Ground Cases\r\n    case UPDATE_GROUND_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    \r\n    case UPDATE_GROUND_SUCCESS:\r\n      debugger;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        grounds: state.grounds.grounds.map(ground =>\r\n          ground.id === action.payload.id ? action.payload : ground\r\n        ), // Update the specific ground in the array\r\n      };\r\n    case UPDATE_GROUND_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groundReducer;\r\n"],"mappings":"AAAA,OACEA,0BAA0B,CAC1BC,0BAA0B,CAC1BC,0BAA0B,CAC1BC,qBAAqB,CACrBC,qBAAqB,CACrBC,qBAAqB,KAChB,0BAA0B,CAEjC,KAAM,CAAAC,YAAY,CAAG,CACnBC,OAAO,CAAE,CACPA,OAAO,CAAE,EAAE,CAAE;AACbC,WAAW,CAAE,EAAE,CACfC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IACT,CACF,CAAC,CAED,KAAM,CAAAC,aAAa,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGP,YAAY,IAAE,CAAAU,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACjD,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,uBAAuB,CAC1B,MAAO,CACL,GAAGL,KAAK,CACRH,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,IACT,CAAC,CACH,IAAK,uBAAuB,CAC1B,MAAO,CACL,GAAGE,KAAK,CACRH,OAAO,CAAE,KAAK,CACdF,OAAO,CAAES,MAAM,CAACE,OAClB,CAAC,CACH,IAAK,uBAAuB,CAC1B,MAAO,CACL,GAAGN,KAAK,CACRH,OAAO,CAAE,KAAK,CACdC,KAAK,CAAEM,MAAM,CAACE,OAChB,CAAC,CAED,IAAK,CAAAlB,0BAA0B,CAC/B,MAAO,CACL,GAAGY,KAAK,CACRH,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,IACT,CAAC,CACH,IAAK,CAAAT,0BAA0B,CAC7B,MAAO,CACL,GAAGW,KAAK,CACRH,OAAO,CAAE,KAAK,CACdF,OAAO,CAAES,MAAM,CAACE,OAClB,CAAC,CACH,IAAK,CAAAhB,0BAA0B,CAC7B,MAAO,CACL,GAAGU,KAAK,CACRH,OAAO,CAAE,KAAK,CACdC,KAAK,CAAEM,MAAM,CAACE,OAChB,CAAC,CAED;AACF,IAAK,CAAAf,qBAAqB,CACxB,MAAO,CACL,GAAGS,KAAK,CACRH,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,IACT,CAAC,CAEH,IAAK,CAAAN,qBAAqB,CACxB,SACA,MAAO,CACL,GAAGQ,KAAK,CACRH,OAAO,CAAE,KAAK,CACdF,OAAO,CAAEK,KAAK,CAACL,OAAO,CAACA,OAAO,CAACY,GAAG,CAACC,MAAM,EACvCA,MAAM,CAACC,EAAE,GAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,CAAGL,MAAM,CAACE,OAAO,CAAGE,MACrD,CAAG;AACL,CAAC,CACH,IAAK,CAAAf,qBAAqB,CACxB,MAAO,CACL,GAAGO,KAAK,CACRH,OAAO,CAAE,KAAK,CACdC,KAAK,CAAEM,MAAM,CAACE,OAChB,CAAC,CAIH,QACE,MAAO,CAAAN,KAAK,CAChB,CACF,CAAC,CAED,cAAe,CAAAD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}