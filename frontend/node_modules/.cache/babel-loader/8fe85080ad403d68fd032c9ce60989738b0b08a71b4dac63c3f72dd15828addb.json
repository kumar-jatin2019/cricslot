{"ast":null,"code":"// import axios from 'axios';\nimport axiosInstance from '../../authToken';\n// Action types\nconst FETCH_GROUNDS_REQUEST = 'FETCH_GROUNDS_REQUEST';\nconst FETCH_GROUNDS_SUCCESS = 'FETCH_GROUNDS_SUCCESS';\nconst FETCH_GROUNDS_FAILURE = 'FETCH_GROUNDS_FAILURE';\nexport const createGround = groundData => async (dispatch, getState) => {\n  try {\n    // Get the token from the Redux store\n    const token = getState().auth.token;\n    console.log(token, \"token\");\n\n    // Set the Authorization header with Bearer token\n    // const config = {\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: `Bearer ${token}`,\n    //   },\n    // };\n    const res = await axiosInstance.post('/auth/createGrounds', groundData); // Adjust API endpoint as needed\n    dispatch({\n      type: 'CREATE_GROUND_SUCCESS',\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: 'CREATE_GROUND_FAILURE',\n      payload: err.response.data.msg\n    });\n  }\n};\n\n// Fetch Grounds Action\nexport const fetchGrounds = () => {\n  return async dispatch => {\n    dispatch({\n      type: FETCH_GROUNDS_REQUEST\n    });\n    try {\n      const response = await axiosInstance.get('/myGrounds'); // Adjust the URL as needed\n      dispatch({\n        type: FETCH_GROUNDS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_GROUNDS_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["axiosInstance","FETCH_GROUNDS_REQUEST","FETCH_GROUNDS_SUCCESS","FETCH_GROUNDS_FAILURE","createGround","groundData","dispatch","getState","token","auth","console","log","res","post","type","payload","data","err","response","msg","fetchGrounds","get","error","message"],"sources":["F:/React Projects/cricbook/frontend/cricslot/src/redux/actions/groundActions.js"],"sourcesContent":["// import axios from 'axios';\r\nimport axiosInstance from '../../authToken';\r\n// Action types\r\nconst FETCH_GROUNDS_REQUEST = 'FETCH_GROUNDS_REQUEST';\r\nconst FETCH_GROUNDS_SUCCESS = 'FETCH_GROUNDS_SUCCESS';\r\nconst FETCH_GROUNDS_FAILURE = 'FETCH_GROUNDS_FAILURE';\r\n\r\n\r\nexport const createGround = (groundData) => async (dispatch,getState) => {\r\n  try {\r\n    // Get the token from the Redux store\r\n    const token = getState().auth.token;\r\n    console.log(token, \"token\");\r\n\r\n    // Set the Authorization header with Bearer token\r\n    // const config = {\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //     Authorization: `Bearer ${token}`,\r\n    //   },\r\n    // };\r\n    const res = await axiosInstance.post('/auth/createGrounds', groundData); // Adjust API endpoint as needed\r\n    dispatch({ type: 'CREATE_GROUND_SUCCESS', payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: 'CREATE_GROUND_FAILURE', payload: err.response.data.msg });\r\n  }\r\n};\r\n\r\n// Fetch Grounds Action\r\nexport const fetchGrounds = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_GROUNDS_REQUEST });\r\n    \r\n    try {\r\n      const response = await axiosInstance.get('/myGrounds'); // Adjust the URL as needed\r\n      dispatch({ type: FETCH_GROUNDS_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      dispatch({ type: FETCH_GROUNDS_FAILURE, payload: error.message });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C;AACA,MAAMC,qBAAqB,GAAG,uBAAuB;AACrD,MAAMC,qBAAqB,GAAG,uBAAuB;AACrD,MAAMC,qBAAqB,GAAG,uBAAuB;AAGrD,OAAO,MAAMC,YAAY,GAAIC,UAAU,IAAK,OAAOC,QAAQ,EAACC,QAAQ,KAAK;EACvE,IAAI;IACF;IACA,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACD,KAAK;IACnCE,OAAO,CAACC,GAAG,CAACH,KAAK,EAAE,OAAO,CAAC;;IAE3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMI,GAAG,GAAG,MAAMZ,aAAa,CAACa,IAAI,CAAC,qBAAqB,EAAER,UAAU,CAAC,CAAC,CAAC;IACzEC,QAAQ,CAAC;MAAEQ,IAAI,EAAE,uBAAuB;MAAEC,OAAO,EAAEH,GAAG,CAACI;IAAK,CAAC,CAAC;EAChE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZX,QAAQ,CAAC;MAAEQ,IAAI,EAAE,uBAAuB;MAAEC,OAAO,EAAEE,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACG;IAAI,CAAC,CAAC;EAC7E;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO,MAAOd,QAAQ,IAAK;IACzBA,QAAQ,CAAC;MAAEQ,IAAI,EAAEb;IAAsB,CAAC,CAAC;IAEzC,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMlB,aAAa,CAACqB,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;MACxDf,QAAQ,CAAC;QAAEQ,IAAI,EAAEZ,qBAAqB;QAAEa,OAAO,EAAEG,QAAQ,CAACF;MAAK,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdhB,QAAQ,CAAC;QAAEQ,IAAI,EAAEX,qBAAqB;QAAEY,OAAO,EAAEO,KAAK,CAACC;MAAQ,CAAC,CAAC;IACnE;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}