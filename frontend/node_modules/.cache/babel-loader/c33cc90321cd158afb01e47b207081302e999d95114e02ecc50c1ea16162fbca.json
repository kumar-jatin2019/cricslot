{"ast":null,"code":"// import axios from 'axios';\nimport axiosInstance from '../../authToken';\n// Action types\nconst FETCH_GROUNDS_REQUEST = 'FETCH_GROUNDS_REQUEST';\nconst FETCH_GROUNDS_SUCCESS = 'FETCH_GROUNDS_SUCCESS';\nconst FETCH_GROUNDS_FAILURE = 'FETCH_GROUNDS_FAILURE';\nimport { useNavigate } from 'react-router-dom';\nexport const createGround = groundData => {\n  var _s = $RefreshSig$();\n  return _s(async (dispatch, getState) => {\n    _s();\n    const navigate = useNavigate(); // for navigation in React\n    try {\n      // Get the token from the Redux store\n      const token = getState().auth.token;\n      console.log(token, \"token\");\n\n      // Set the Authorization header with Bearer token\n      // const config = {\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     Authorization: `Bearer ${token}`,\n      //   },\n      // };\n      const res = await axiosInstance.post('/auth/createGrounds', groundData); // Adjust API endpoint as needed\n      dispatch({\n        type: 'CREATE_GROUND_SUCCESS',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'CREATE_GROUND_FAILURE',\n        payload: err.response.data.msg\n      });\n    }\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n};\n\n// Fetch Grounds Action\nexport const fetchGrounds = () => {\n  return async dispatch => {\n    dispatch({\n      type: FETCH_GROUNDS_REQUEST\n    });\n    try {\n      const response = await axiosInstance.get('/auth/myGrounds'); // Adjust the URL as needed\n      dispatch({\n        type: FETCH_GROUNDS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.response.data.msg, \"message\");\n      if (error.response.data.msg === \"Token is not valid\") {\n        navigate('/login');\n      }\n      dispatch({\n        type: FETCH_GROUNDS_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["axiosInstance","FETCH_GROUNDS_REQUEST","FETCH_GROUNDS_SUCCESS","FETCH_GROUNDS_FAILURE","useNavigate","createGround","groundData","_s","$RefreshSig$","dispatch","getState","navigate","token","auth","console","log","res","post","type","payload","data","err","response","msg","fetchGrounds","get","error","message"],"sources":["F:/React Projects/cricbook/frontend/cricslot/src/redux/actions/groundActions.js"],"sourcesContent":["// import axios from 'axios';\r\nimport axiosInstance from '../../authToken';\r\n// Action types\r\nconst FETCH_GROUNDS_REQUEST = 'FETCH_GROUNDS_REQUEST';\r\nconst FETCH_GROUNDS_SUCCESS = 'FETCH_GROUNDS_SUCCESS';\r\nconst FETCH_GROUNDS_FAILURE = 'FETCH_GROUNDS_FAILURE';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport const createGround = (groundData) => async (dispatch,getState) => {\r\n  const navigate = useNavigate(); // for navigation in React\r\n  try {\r\n    // Get the token from the Redux store\r\n    const token = getState().auth.token;\r\n    console.log(token, \"token\");\r\n\r\n    // Set the Authorization header with Bearer token\r\n    // const config = {\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //     Authorization: `Bearer ${token}`,\r\n    //   },\r\n    // };\r\n    const res = await axiosInstance.post('/auth/createGrounds', groundData); // Adjust API endpoint as needed\r\n    dispatch({ type: 'CREATE_GROUND_SUCCESS', payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: 'CREATE_GROUND_FAILURE', payload: err.response.data.msg });\r\n  }\r\n};\r\n\r\n// Fetch Grounds Action\r\nexport const fetchGrounds = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_GROUNDS_REQUEST });\r\n    \r\n    try {\r\n      const response = await axiosInstance.get('/auth/myGrounds'); // Adjust the URL as needed\r\n      dispatch({ type: FETCH_GROUNDS_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n      console.log(error.response.data.msg, \"message\");\r\n      if(error.response.data.msg === \"Token is not valid\"){\r\n        navigate('/login');\r\n      }\r\n      dispatch({ type: FETCH_GROUNDS_FAILURE, payload: error.message });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C;AACA,MAAMC,qBAAqB,GAAG,uBAAuB;AACrD,MAAMC,qBAAqB,GAAG,uBAAuB;AACrD,MAAMC,qBAAqB,GAAG,uBAAuB;AACrD,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,OAAO,MAAMC,YAAY,GAAIC,UAAU;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,OAAAD,EAAA,CAAK,OAAOE,QAAQ,EAACC,QAAQ,KAAK;IAAAH,EAAA;IACvE,MAAMI,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;IAChC,IAAI;MACF;MACA,MAAMQ,KAAK,GAAGF,QAAQ,CAAC,CAAC,CAACG,IAAI,CAACD,KAAK;MACnCE,OAAO,CAACC,GAAG,CAACH,KAAK,EAAE,OAAO,CAAC;;MAE3B;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAMI,GAAG,GAAG,MAAMhB,aAAa,CAACiB,IAAI,CAAC,qBAAqB,EAAEX,UAAU,CAAC,CAAC,CAAC;MACzEG,QAAQ,CAAC;QAAES,IAAI,EAAE,uBAAuB;QAAEC,OAAO,EAAEH,GAAG,CAACI;MAAK,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZZ,QAAQ,CAAC;QAAES,IAAI,EAAE,uBAAuB;QAAEC,OAAO,EAAEE,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACG;MAAI,CAAC,CAAC;IAC7E;EACF,CAAC;IAAA,QAlBkBnB,WAAW;EAAA;AAAA,CAkB7B;;AAED;AACA,OAAO,MAAMoB,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO,MAAOf,QAAQ,IAAK;IACzBA,QAAQ,CAAC;MAAES,IAAI,EAAEjB;IAAsB,CAAC,CAAC;IAEzC,IAAI;MACF,MAAMqB,QAAQ,GAAG,MAAMtB,aAAa,CAACyB,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;MAC7DhB,QAAQ,CAAC;QAAES,IAAI,EAAEhB,qBAAqB;QAAEiB,OAAO,EAAEG,QAAQ,CAACF;MAAK,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAACJ,QAAQ,CAACF,IAAI,CAACG,GAAG,EAAE,SAAS,CAAC;MAC/C,IAAGG,KAAK,CAACJ,QAAQ,CAACF,IAAI,CAACG,GAAG,KAAK,oBAAoB,EAAC;QAClDZ,QAAQ,CAAC,QAAQ,CAAC;MACpB;MACAF,QAAQ,CAAC;QAAES,IAAI,EAAEf,qBAAqB;QAAEgB,OAAO,EAAEO,KAAK,CAACC;MAAQ,CAAC,CAAC;IACnE;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}